(library
 (name wiringpi2)
 (public_name wiringpi2)
 (flags (:standard
         (-w -27-33-26-9-21-32)
         ))
 (libraries
  ctypes
  ctypes.foreign
  )
 (ctypes
  ;; wiringPi was installed from github/master (v3.14) @ debian 11 using linux kernel 6.1.21
  (external_library_name libwiringPi)
  ;; < external_library_name was found using 'ldd gpio'
  ;;(external_library_name libwiringPiDev)
  ;; < this is only for some specific extra board-support
  ;; (build_flags_resolver pkg_config) ;;<- could work if was installed via some pkg-manager
  (build_flags_resolver
   (vendored
    (c_flags :standard)
    (c_library_flags -Wl,--no-as-needed -lwiringPi)
    ))
  (headers (include "wiringPi.h" "wiringPiI2C.h" "wiringPiSPI.h"))
  ;; < these are a subset of wiringPi headers present in /usr/include/ 
  (type_description
   (instance Types)
   (functor Type_description))
  (function_description
   (concurrency sequential)
   ;;< I guess this is fast - possibly try 'unlocked' - will only make a difference if using Thread.t?
   (instance Functions)
   (functor Function_description))
  (generated_types Types_generated)
  (generated_entry_point C)
  )
 )
